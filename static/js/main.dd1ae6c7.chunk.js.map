{"version":3,"sources":["slices/listSlice.js","slices/formSlice.js","components/Forms/Form/Form.js","slices/searchSlice.js","components/Forms/SearchBar/SearchBar.js","components/Table/TableRow/TableRow.js","components/Table/Table.js","App.js","store/index.js","index.js"],"names":["listSlice","createSlice","name","initialState","id","price","reducers","addService","state","payload","push","nanoid","addServiceChanges","index","removeService","findIndex","item","splice","actions","editingMode","formSlice","changeServiceField","value","editService","endServiceEditing","Form","form","useSelector","dispatch","useDispatch","handleInputChange","target","className","onSubmit","event","preventDefault","onReset","htmlFor","type","required","onChange","placeholder","autoComplete","min","max","searchSlice","query","changeSearchField","SearchBar","search","TableRow","props","handleDeleteClick","onDeleteClick","handleEditClick","onEditClick","href","onClick","Table","services","list","service","filteredList","map","startsWith","filter","Boolean","length","colSpan","App","reducer","store","configureStore","devtools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd1ae6c7.chunk.js","sourcesContent":["import { nanoid } from 'nanoid';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = [\n  {\n    id: '76OOH7xQPaqkVY6WJhpJ5',\n    name: 'Замена стекла',\n    price: '21000',\n  },\n  {\n    id: 'Vmii-9M7fj9C6LpjSx1Eh',\n    name: 'Замена дисплея',\n    price: '25000',\n  },\n  {\n    id: 'WJ0HT1M9kA-IeAcSq6Quu',\n    name: 'Замена аккумулятора',\n    price: '4000',\n  },\n  {\n    id: 'G5RdV1pOqHALXLT8hY1Oa',\n    name: 'Замена микрофона',\n    price: '2500',\n  },\n];\n\nconst listSlice = createSlice({\n  name: 'list',\n  initialState,\n  reducers: {\n    addService(state, { payload }) {\n      const { name, price } = payload;\n      state.push({ id: nanoid(), name, price });\n    },\n    addServiceChanges(state, { payload }) {\n      const { index, name, price } = payload;\n      state[index] = {\n        id: state[index].id,\n        name,\n        price,\n      };\n    },\n    removeService(state, { payload }) {\n      const { id } = payload;\n      const index = state.findIndex((item) => item.id === id);\n      state.splice(index, 1);\n    },\n  },\n});\n\nexport const {\n  addService,\n  addServiceChanges,\n  removeService\n} = listSlice.actions;\nexport default listSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  name: '',\n  price: '',\n  editingMode: {\n    state: false,\n    index: '',\n  },\n};\n\nconst formSlice = createSlice({\n  name: 'form',\n  initialState,\n  reducers: {\n    changeServiceField(state, { payload }) {\n      const { name, value } = payload;\n      state[name] = value;\n    },\n    editService(state, { payload }) {\n      return payload;\n    },\n    endServiceEditing(state) {\n      return initialState;\n    },\n  },\n});\n\nexport const {\n  changeServiceField,\n  editService,\n  endServiceEditing\n} = formSlice.actions;\nexport default formSlice.reducer;\n","import '../Form.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  addService,\n  addServiceChanges,\n} from '../../../slices/listSlice';\nimport {\n  endServiceEditing,\n  changeServiceField,\n} from '../../../slices/formSlice';\n\nexport default function Form() {\n  const form = useSelector((state) => state.form);\n  const dispatch = useDispatch();\n\n  function handleInputChange({ target: { name, value } }) {\n    dispatch(changeServiceField({ name, value }));\n  }\n\n  return (\n    <form\n      className=\"Form\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        const { name, price } = form;\n\n        if (form.editingMode.state) {\n          const { index } = form.editingMode;\n\n          dispatch(addServiceChanges({ index, name, price }));\n          dispatch(endServiceEditing());\n        } else {\n          dispatch(addService({ name, price }))\n        }\n      }}\n\n      onReset={(event) => {\n        event.preventDefault();\n\n        dispatch(endServiceEditing());\n      }}\n    >\n      <div className=\"Form-control\">\n        <label htmlFor=\"name\">Услуга</label>\n        <input\n          className=\"Form-control__name\"\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          required\n          value={form.name}\n          onChange={handleInputChange}\n          placeholder=\"Например: Замена...\"\n          autoComplete=\"off\"\n        />\n      </div>\n      <div className=\"Form-control\">\n        <label htmlFor=\"price\">Стоимость (руб.)</label>\n        <input\n          className=\"Form-control__price\"\n          type=\"number\"\n          id=\"price\"\n          name=\"price\"\n          min=\"1\"\n          max=\"999999\"\n          required\n          value={form.price}\n          onChange={handleInputChange}\n        />\n      </div>\n      <input\n        className=\"Form-control__button-save\"\n        type=\"submit\"\n        value=\"Сохранить\"\n      />\n      {\n        form.editingMode.state\n        && <input\n            className=\"Form-control__button-reset\"\n            type=\"reset\"\n            value=\"Отменить\"\n          />\n      }\n    </form>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  query: '',\n};\n\nconst searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    changeSearchField(state, { payload }) {\n      const { name, value } = payload;\n      state[name] = value;\n    },\n  },\n});\n\nexport const {\n  changeSearchField,\n} = searchSlice.actions;\nexport default searchSlice.reducer;\n","import '../Form.css';\nimport './SearchBar.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeSearchField } from '../../../slices/searchSlice';\n\nexport default function SearchBar() {\n  const search = useSelector((state) => state.search);\n  const dispatch = useDispatch();\n\n  function handleSearchChange({ target }) {\n    const { name, value } = target;\n\n    dispatch(changeSearchField({ name, value }));\n  }\n\n  return (\n    <form\n      className=\"Form\"\n    >\n      <div className=\"Form-control\">\n        <label htmlFor=\"query\">Поиск</label>\n        <input\n          className=\"Form-control__name\"\n          type=\"text\"\n          id=\"query\"\n          name=\"query\"\n          value={search.query}\n          onChange={handleSearchChange}\n          placeholder=\"Начните вводить наименование услуги\"\n          autoComplete=\"off\"\n        />\n      </div>\n    </form>\n  );\n}\n","import './TableRow.css';\n\nexport default function TableRow(props) {\n  const {\n    id,\n    name,\n    price,\n    onDeleteClick: handleDeleteClick,\n    onEditClick: handleEditClick,\n  } = props;\n\n  return (\n    <tr className=\"TableRow\" id={id}>\n      <td>{name}</td>\n      <td>{price}</td>\n      <td>\n        <a\n          className=\"TableRow-control__edit\"\n          href=\"#0\"\n          onClick={handleEditClick}\n        >\n          &#9998;\n        </a>\n        <a\n          className=\"TableRow-control__delete\"\n          href=\"#0\"\n          onClick={handleDeleteClick}\n        >\n          &#10008;\n        </a>\n      </td>\n    </tr>\n  );\n}\n","import './Table.css';\nimport TableRow from './TableRow/TableRow';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeService } from '../../slices/listSlice';\nimport { editService } from '../../slices/formSlice';\n\nexport default function Table() {\n  const services = useSelector((state) => state.list);\n  const search = useSelector((state) => state.search);\n  const dispatch = useDispatch();\n  const tableLength = 3;\n\n  function handleDeleteClick(id) {\n    return dispatch(removeService({ id }));\n  }\n\n  function handleEditClick(id) {\n    const index = services.findIndex((service) => service.id === id);\n    const { name, price } = services[index];\n\n    return dispatch(editService({ name, price, editingMode: { state: true, index } }));\n  }\n\n  let filteredList = null;\n\n  if (search.query) {\n    filteredList = services.map(({ id, name, price }) => {\n      if (!name.startsWith(search.query)) {\n        return null;\n      }\n\n      return (\n        <TableRow\n          key={id}\n          id={id}\n          name={name}\n          price={price}\n          onDeleteClick={() => handleDeleteClick(id)}\n          onEditClick={() => handleEditClick(id)}\n        />\n      );\n    });\n\n    if (!filteredList.filter(Boolean).length) {\n      filteredList = (\n        <tr>\n          <td colSpan={tableLength}>\n            По вашему запросу ничего не найдено\n          </td>\n        </tr>\n      );\n    }\n  }\n\n  const list = services.map(({ id, name, price }) => {\n    return (\n      <TableRow\n        key={id}\n        id={id}\n        name={name}\n        price={price}\n        onDeleteClick={() => handleDeleteClick(id)}\n        onEditClick={() => handleEditClick(id)}\n      />\n    );\n  })\n\n  return (\n    <table className=\"Table\">\n      <thead>\n        <tr>\n          <th>Услуга</th>\n          <th>Стоимость (руб.)</th>\n          <th>Действия</th>\n        </tr>\n      </thead>\n      <tbody>{filteredList || list}</tbody>\n    </table>\n  );\n}\n","import Form from './components/Forms/Form/Form';\nimport SearchBar from './components/Forms/SearchBar/SearchBar';\nimport Table from './components/Table/Table';\n\nfunction App() {\n  return (\n    <>\n      <Form />\n      <SearchBar />\n      <Table />\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport formSlice from '../slices/formSlice';\nimport searchSlice from '../slices/searchSlice';\nimport listSlice from '../slices/listSlice';\n\nconst reducer = {\n  form: formSlice,\n  search: searchSlice,\n  list: listSlice,\n};\n\nconst store = configureStore({\n  reducer,\n  devtools: true,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}